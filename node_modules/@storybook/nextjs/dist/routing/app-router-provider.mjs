import '../chunk-FFRTCGB4.mjs';
import React from 'react';
import { GlobalLayoutRouterContext, AppRouterContext, LayoutRouterContext } from 'next/dist/shared/lib/app-router-context.shared-runtime';
import { PathnameContext, SearchParamsContext } from 'next/dist/shared/lib/hooks-client-context.shared-runtime';

var getParallelRoutes=segmentsList=>{let segment=segmentsList.shift();return segment?[segment,{children:getParallelRoutes(segmentsList)}]:[]},AppRouterProvider=({children,action,routeParams})=>{let{pathname,query,segments=[],...restRouteParams}=routeParams,tree=[pathname,{children:getParallelRoutes([...segments])}];return React.createElement(PathnameContext.Provider,{value:pathname},React.createElement(SearchParamsContext.Provider,{value:new URLSearchParams(query)},React.createElement(GlobalLayoutRouterContext.Provider,{value:{changeByServerResponse(){},buildId:"storybook",tree,focusAndScrollRef:{apply:!1,hashFragment:null,segmentPaths:[tree],onlyHashChange:!1},nextUrl:pathname}},React.createElement(AppRouterContext.Provider,{value:{push(...args){action("nextNavigation.push")(...args);},replace(...args){action("nextNavigation.replace")(...args);},forward(...args){action("nextNavigation.forward")(...args);},back(...args){action("nextNavigation.back")(...args);},prefetch(...args){action("nextNavigation.prefetch")(...args);},refresh:()=>{action("nextNavigation.refresh")();},...restRouteParams}},React.createElement(LayoutRouterContext.Provider,{value:{childNodes:new Map,tree,url:pathname}},children)))))};

export { AppRouterProvider };
